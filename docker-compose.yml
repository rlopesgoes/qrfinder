version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: qrfinder-nginx
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - webapi
    networks:
      - qrfinder-network

  webapi:
    build:
      context: .
      dockerfile: src/WebApi/Dockerfile
    container_name: qrfinder-webapi
    ports:
      - "5003:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__MongoDB=mongodb://mongo:27017/qrfinder
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongo
      - kafka
    networks:
      - qrfinder-network

  worker:
    build:
      context: .
      dockerfile: src/Worker/Dockerfile
    container_name: qrfinder-worker
    environment:
      - ConnectionStrings__MongoDB=mongodb://mongo:27017/qrfinder
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongo
      - kafka
    networks:
      - qrfinder-network

  mongo:
    image: mongo:7.0
    container_name: qrfinder-mongo
    ports:
      - "5002:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=qrfinder
    volumes:
      - mongo_data:/data/db
    networks:
      - qrfinder-network

  mongo-express:
    image: mongo-express:latest
    container_name: qrfinder-mongo-express
    ports:
      - "5005:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongo
    networks:
      - qrfinder-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: qrfinder-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - qrfinder-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: qrfinder-kafka
    ports:
      - "5001:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:5001
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper
    networks:
      - qrfinder-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: qrfinder-kafdrop
    ports:
      - "5004:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka
    networks:
      - qrfinder-network

volumes:
  mongo_data:

networks:
  qrfinder-network:
    driver: bridge